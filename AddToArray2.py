
array = []

def main():
    given_file = open("C:/Users/arthu/OneDrive/Área de Trabalho/Code/AnaliseDeAlgoritimos/File.txt", "r")

    lines = str(given_file.readlines())
    lines = lines.split(",")
    given_file.close()
    #lines = [6459, 9419, 4520, 3877, 6183, 331, 5946, 9780, 3441, 8844, 5100, 2845, 8384, 6387, 8273, 2675, 7775, 6757, 1055, 1584, 9512, 267, 1294, 3486, 8962, 9832, 4272, 8075, 3497, 8928, 85, 1876, 7445, 9350, 8111, 7834, 8931, 7463, 2964, 5365, 1510, 3807, 8307, 8186, 4508, 8419, 4109, 9807, 6374, 1043, 176, 3083, 4828, 272, 6382, 8052, 2956, 9749, 9048, 5126, 9932, 1925, 436, 198, 9688, 2252, 5435, 7230, 8538, 363, 1602, 3590, 567, 264, 2892, 2635, 5423, 5545, 691, 6860, 5982, 9611, 3488, 1483, 4788, 9196, 8113, 2816, 6315, 6130, 751, 9642, 67, 1528, 4944, 3442, 3102, 9762, 7375, 6754, 6349, 537, 8748, 7328, 5408, 5236, 7017, 1030, 3331, 6755, 3498, 6515, 3240, 6759, 2204, 317, 6112, 9032, 6939, 5183, 3745, 7188, 8727, 3977, 2832, 9040, 4395, 4000, 3756, 192, 6905, 5414, 9775, 3174, 7224, 9668, 2940, 4959, 8971, 4373, 2830, 23, 7903, 6676, 3028, 5761, 9201, 596, 6132, 855, 4000, 6902, 1566, 5593, 1429, 2897, 7310, 8426, 1975, 390, 8160, 3161, 6202, 7144, 8218, 2177, 8479, 8583, 6062, 2689, 267, 5208, 10, 44, 6665, 7945, 3405, 7024, 3138, 1327, 1156, 8574, 2868, 9428, 9221, 5486, 2476, 7992, 8140, 3456, 1509, 1189, 8719, 4141, 6097, 3161, 3491, 4464, 8893, 9724, 7084, 5529, 4331, 5060, 6863, 2091, 517, 6217, 3340, 3082, 1189, 7602, 3809, 7949, 8593, 6718, 4181, 7919, 8543, 3829, 8613, 8861, 2073, 9129, 6425, 4484, 7562, 2464, 2652, 4962, 9947, 8541, 1081, 8322, 3813, 3992, 9053, 8595, 1774, 4089, 8097, 8353, 9492, 2526, 233, 191, 9796, 2438, 7014, 4438, 523, 7657, 1337, 9604, 8974, 4486, 3838, 4115, 7957, 8860, 1974, 1871, 4026, 1581, 792, 5935, 7634, 1618, 899, 7387, 9363, 8538, 3982, 5145, 9363, 5802, 1008, 6855, 1597, 9804, 534, 9271, 9995, 951, 5579, 1721, 1018, 2688, 5810, 5165, 9306, 3672, 4256, 214, 4279, 1943, 8126, 7907, 905, 5774, 6214, 8157, 7693, 8095, 7069, 831, 9154, 1686, 7368, 6435, 8451, 4733, 2025, 6318, 4707, 3370, 8242, 2675, 7602, 48, 9395, 5319, 586, 1585, 5843, 9377, 6130, 1768, 600, 4519, 164, 398, 5109, 148, 3922, 2912, 2218, 9458, 7096, 440, 5941, 7949, 8709, 5012, 8774, 8900, 2493, 2962, 7160, 9053, 6158, 3953, 8925, 5892, 8407, 6373, 4513, 9889, 3327, 2197, 667, 8778, 7324, 3345, 5100, 5793, 1840, 721, 3012, 1270, 9313, 1871, 6733, 7653, 8123, 2884, 5021, 9891, 3631, 5249, 7238, 425, 2413, 3680, 2152, 6741, 9412, 4447, 3193, 4318, 6530, 8967, 7484, 270, 6221, 8401, 3774, 8113, 1723, 504, 4552, 9275, 2227, 6906, 4143, 2944, 7288, 9729, 138, 623, 6713, 3517, 686, 8793, 8857, 461, 9127, 3178, 2519, 7262, 2702, 5580, 8770, 128, 3824, 903, 7929, 2864, 4175, 4914, 8958, 1262, 4307, 2181, 1274, 3223, 1080, 3120, 8005, 5167, 7833, 5385, 205, 7167, 9583, 1271, 1284, 1021, 7491, 3973, 2312, 9580, 472, 153, 1697, 4482, 3636, 3595, 4233, 328, 1370, 7159, 1611, 9924, 7824, 2224, 23, 2646, 9941, 5634, 7916, 6695, 2050, 231, 218, 970, 7027, 7126, 8836, 1837, 7359, 8403, 2370, 4468, 1371, 3987, 3698, 1675, 390, 2437, 4725, 6789, 4624, 3468, 2109, 7567, 9534, 6690, 9855, 8792, 9920, 5251, 1609, 1208, 7122, 3471, 7851, 6747, 984, 9953, 4878, 3133, 5880, 6545, 6399, 7240, 8799, 3283, 6195, 2848, 7517, 8504, 495, 4375, 2079, 362, 5090, 8654, 2782, 895, 9613, 4302, 9790, 2049, 226, 5174, 3398, 804, 5715, 625, 4260, 2068, 3476, 9898, 5998, 1781, 3075, 8474, 4275, 4731, 9693, 5893, 8211, 5770, 1205, 547, 6277, 353, 9356, 1922, 8718, 5830, 5853, 21, 2364, 6470, 8367, 6232, 6748, 200, 1209, 6415, 4676, 7935, 627, 6134, 946, 597, 4818, 1541, 4447, 6203, 7396, 4066, 8092, 4020, 4944, 6516, 6723, 6079, 8367, 2668, 2451, 9752, 486, 9375, 1402, 6187, 1256, 5359, 9578, 2955, 4355, 630, 9795, 2643, 2111, 1790, 7421, 7475, 4656, 2280, 311, 9828, 5659, 2794, 5122, 4369, 107, 5253, 3168, 1153, 7075, 6851, 5530, 8226, 4233, 8544, 9040, 8912, 9265, 4387, 304, 6071, 9547, 4218, 1361, 1353, 8554, 7852, 3741, 3212, 16, 6946, 8550, 9909, 2580, 3141, 8022, 5736, 5794, 8443, 7069, 3314, 9532, 6395, 472, 3433, 6528, 1688, 711, 5513, 6169, 4219, 1134, 4717, 5730, 4478, 9958, 3613, 8310, 2320, 6054, 847, 9743, 3710, 7969, 7332, 6361, 7350, 6491, 2163, 5987, 2127, 7578, 535, 2044, 4026, 5960, 1403, 7927, 9061, 6182, 8534, 5869, 9567, 4334, 2761, 2659, 9576, 2035, 677, 536, 8812, 9047, 3328, 3211, 7882, 3709, 9765, 4642, 6527, 9659, 8685, 8457, 2676, 8312, 6655, 2270, 6540, 5173, 4637, 3090, 1819, 5159, 4709, 1138, 972, 4605, 3501, 4353, 1869, 2389, 427, 8108, 4281, 3179, 2895, 2715, 3533, 1927, 8993, 9637, 9718, 6848, 3807, 5878, 8139, 105, 1974, 2469, 1521, 9437, 2620, 9371, 5753, 6566, 421, 7834, 9259, 736, 8408, 1667, 8109, 3265, 6169, 5720, 7695, 8638, 2727, 5365, 661, 8103, 1527, 9659, 8915, 8210, 6863, 393, 9798, 775, 3238, 9988, 1164, 8096, 9941, 1140, 8824, 2046, 3996, 3415, 5371, 6883, 7753, 1853, 6292, 104, 5954, 4492, 3423, 7235, 8024, 6398, 7200, 8756, 1666, 710, 6743, 2077, 7965, 2321, 8620, 6876, 5218, 479, 9571, 6570, 2137, 1012, 4908, 1137, 9180, 6906, 8369, 1026, 1731, 9370, 6356, 3591, 2595, 7840, 7905, 9353, 9623, 2801, 8607, 1846, 2547, 1319, 4331, 6840, 1165, 3447, 1216, 9668, 2873, 6222, 7865, 8834, 3648, 1554, 6763, 7007, 9219, 3687, 6587, 1205, 8170, 1618, 7434, 1400, 7107, 9650, 9683, 3435, 3555, 8395, 2889, 5941, 8308, 9242, 7460, 3735, 8812, 7279, 726, 4635, 5475, 9042, 2572, 8900, 8699, 5487, 9253, 731, 8440, 8606, 1734, 1273, 1136, 6211, 5122, 4319, 9360, 6668, 1605, 5650, 2932, 9488, 8280, 2229, 858, 3622, 3944, 7410, 7843, 4089, 6121, 5015, 7606, 5816, 4147, 8571, 2588, 3064, 6624, 9914, 7030, 1816, 2985, 2813, 485, 9248, 9351, 2931, 7446, 2445, 7727, 5132, 5422, 1255, 2013, 4654, 2406, 3676, 9306, 3878, 4396, 6986, 5037, 8719, 6505, 1264, 8595, 967, 7029, 9094, 6968, 5061, 2881, 5234, 2025, 7949, 961, 7054, 5979, 951, 1573, 3053, 2500, 7155, 7617, 6126, 6046, 4654, 8726, 407, 372, 4528, 2947, 2368, 5441, 3231, 8369, 5144, 236, 9864, 9500, 4169, 5823, 1553, 6283, 9180, 9797, 7945, 2575, 3296, 4843, 857, 7763, 1213, 255, 210, 6386, 3060, 6635, 6017, 159, 6674, 9142]
    for line in lines:
        try:
            addToArr(int(line))
        except ValueError:
            continue

def searchInArr(n):
    if array == []:
        return False,0
    upper = len(array)
    lower = 0
    x = -1
    index = 0
    while(True):
        media = int( (upper+ lower)/2)# log n
        if x == array[media]:
            index = media
            break
        x = array[media]
        if(x > n):
            upper = media
            continue
        elif(x < n):
            lower = media
            continue
        else:
            return True,-1
    index = media
    x = array[media]
   
    if n > x:# n
        while(n > x):
            index += 1
            if index == len(array):
                return False,index
            x = array[index]
    else:
        if index == 0:
           return False,index
        while(n < x):
            index -= 1
            x = array[index]
        index += 1
    return False, index

def addNOnI(n, index):#n
    newArray = []
    if array == []:
        newArray.append(n)
        return newArray
    elif index == len(array):
        for i in range(len(array)):
            newArray.append(array[i])
        newArray.append(n)
        return newArray
    for i in range(len(array)):
        if index == i:
            newArray.append(n)
        newArray.append(array[i])
    
    return newArray
    
def addToArr(n):
    boolean, index = searchInArr(n)
    if not boolean:
        new_array = addNOnI(n, index)
        array.clear()
        array.extend(new_array)#n 
    else:
        return
    
# (log n + 3n)

if __name__ == "__main__":
    main()
    print(array)
